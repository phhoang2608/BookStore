@model BulkyBook.Models.ViewModels.ProductVM
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var title = "Create Product";
}
<form method="post" enctype="multipart/form-data">
    <div class="row p-3 border">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        @if(Model.Product.Id != 0) //since it's not a nullable it will be put to zero if it's null
        {
            //this is for edit
            title = "Edit Product";
            <input type ="hidden" asp-for="Product.Id" />
        }
        <div class="col-12 border-bottom">
            <h2 class="text-primary">@title</h2>
        </div>
        <div class="col-8 pt-4">
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Product.Title"></label> @*//asp-for tag helper here will give the label name based on the data annotation we set in Model*@
                </div>
                <div class="col-8">
                    <input asp-for="Product.Title" class="form-control" />
                    <span asp-validation-for="Product.Title" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Product.ISBN"></label> @*//asp-for tag helper here will give the label name based on the data annotation we set in Model*@
                </div>
                <div class="col-8">
                    <input asp-for="Product.ISBN" class="form-control" />
                    <span asp-validation-for="Product.ISBN" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Product.Author"></label> @*//asp-for tag helper here will give the label name based on the data annotation we set in Model*@
                </div>
                <div class="col-8">
                    <input asp-for="Product.Author" class="form-control" />
                    <span asp-validation-for="Product.Author" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Product.Description"></label> @*//asp-for tag helper here will give the label name based on the data annotation we set in Model*@
                </div>
                <div class="col-8">
                    <textarea asp-for="Product.Description" class="form-control"></textarea>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Product.ListPrice"></label> @*//asp-for tag helper here will give the label name based on the data annotation we set in Model*@
                </div>
                <div class="col-8">
                    <input asp-for="Product.ListPrice" class="form-control" />
                    <span asp-validation-for="Product.ListPrice" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Product.Price"></label> @*//asp-for tag helper here will give the label name based on the data annotation we set in Model*@
                </div>
                <div class="col-8">
                    <input asp-for="Product.Price" class="form-control" />
                    <span asp-validation-for="Product.Price" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Product.Price50"></label> @*//asp-for tag helper here will give the label name based on the data annotation we set in Model*@
                </div>
                <div class="col-8">
                    <input asp-for="Product.Price50" class="form-control" />
                    <span asp-validation-for="Product.Price50" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Product.Price100"></label> @*//asp-for tag helper here will give the label name based on the data annotation we set in Model*@
                </div>
                <div class="col-8">
                    <input asp-for="Product.Price100" class="form-control" />
                    <span asp-validation-for="Product.Price100" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    Category
                </div>
                <div class="col-8">
                    @* corresponds to each statement inside seperate by commas:
                what is the ID should be stored and where to store the selected ID,
                what is the list that populate this, default,
                if you want any class*@
                    @Html.DropDownListFor(m => m.Product.CategoryId, Model.CategoryList, "Select a Category",
                   new { @class = "form-control" })
                    <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    Cover Type
                </div>
                <div class="col-8">
                    @* corresponds to each statement inside seperate by commas:
                what is the ID should be stored and where to store the selected ID,
                what is the list that populate this, default,
                if you want any class*@
                    @Html.DropDownListFor(m => m.Product.CoverTypeId, Model.CoverTypeList, "Select a Cover Type",
                   new { @class = "form-control" })
                    <span asp-validation-for="Product.CoverTypeId" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    Image
                </div>
                <div class="col-8">
                    <input type="file" name="files" id="uploadBox" multiple-class="form-control" />  
                </div>
            </div>
            <div class="form-group row">
                <div class="col-8 offset-4">
                    @if (Model.Product.Id != 0)
                    {
                        <partial name="_EditAndBackToListButton" model="@Model.Product.Id" />
                    }
                    else
                    {
                        <div class="row">
                            <div class="col">
                                <button type="submit" onclick="return validateInput()" class="btn btn-primary form-control">Create</button>  @*type="submit" will trigger a post event*@
                            </div>
                            <div class="col">
                                <a asp-action="Index" class="btn btn-primary form-control"> Back to List</a>
                            </div>
                        </div>

                    }
                </div>
            </div>
        </div>
        @if(Model.Product.Id != 0 )
        {
            //that means it's update
            <div class="col-3 offset-1 pt-4">
                <img src="@Model.Product.ImageUrl" width="100%" style="border-radius: 5px; border: 1px solid #bbb9b9;" />
            </div>
        }
    </div>
</form>

@section Scripts{
     @*//enables client-side validation*@
    <partial name="_ValidationScriptsPartial" /> 
    <script src="https://cdn.tiny.cloud/1/0dxbcyta10uwardlkv74nfd2khxhvmgc4b6f5s2ohw4o2k7g/tinymce/5/tinymce.min.js"></script>
    <script>
        tinymce.init({
            selector: 'textarea',
            plugins: 'lists',
            menubar: 'file edit format'
        });
        function validateInput() {
            if (document.getElementById("uploadBox.value").value == " ") {
                swal("Error", "Please select an image", "error");
                return false;
            }
            return true
        }
    </script>
 }